---
# tasks file for Cluser API
- name: Cluster API | Create addon dir
  file:
    path: "{{ kube_config_dir }}/addons/cluster_api"
    state: directory
    owner: root
    group: root
    mode: 0755
  when:
    - inventory_hostname == groups['kube_control_plane'][0]

- name: Cluster API | Generate Manifests
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ kube_config_dir }}/addons/cluster_api/{{ item.file }}"
  with_items:
    - { name: "cluster-api-componenets", file: "cluster-api-components.yaml"}
  when: 
    - inventory_hostname == groups['kube_control_plane'][0]

- name: Cluster API | Apply Cluster API
  kube:
    kubectl: "{{ bin_dir }}/kubectl"
    filename: "{{ kube_config_dir }}/addons/cluster_api/{{ item }}"
    state: "latest"
    wait: true
  with_items:
    - "cluster-api-components.yaml"
  when:
    - inventory_hostname == groups['kube_control_plane'][0]

- name: Cluster API - Provider AWS | Generate Binary - clusterawsadm
  ansible.builtin.copy:
    src: "templates/{{ item.file }}"
    dest: "{{ kube_config_dir }}/addons/cluster_api/"
    owner: "root"
    group: "root"
    mode: '0777'
  with_items:
    - { name: "clusterawsadm", file: "clusterawsadm" }
  when: 
    - inventory_hostname == groups['kube_control_plane'][0]
    - CAPI_PROVIDER_AWS == "true"

- name: Cluster API - Provider AWS | Generate AWS Credential File
  template:
    src: "{{ item.file }}"
    dest: "{{ kube_config_dir }}/addons/cluster_api/{{ item.file }}"
  with_items:
    - { name: "aws-config", file: "aws-config"}
  when: 
    - inventory_hostname == groups['kube_control_plane'][0]
    - CAPI_PROVIDER_AWS == "true"

- name: Cluster API - Provider AWS | Generate Manifests CAPI Provider AWS - Step1
  ansible.builtin.copy:
    src: "templates/{{ item.file }}.yaml"
    dest: "{{ kube_config_dir }}/addons/cluster_api/"
    owner: "root"
    group: "root"
    mode: '0644'
  with_items:
    - { name: "infrastructure-components-aws", file: "infrastructure-components-aws" }
  when: 
    - inventory_hostname == groups['kube_control_plane'][0]
    - CAPI_PROVIDER_AWS == "true"

- name: Cluster API - Provider AWS | Generate Manifests CAPI Provider AWS - Step2
  ansible.builtin.shell: |
    source ./aws-config
    sed -i 's#${AWS_B64ENCODED_CREDENTIALS}#'${AWS_B64ENCODED_CREDENTIALS}'#g' ./infrastructure-components-aws.yaml
  args:
    chdir: "{{ kube_config_dir }}/addons/cluster_api"
  when:
    - inventory_hostname == groups['kube_control_plane'][0]
    - CAPI_PROVIDER_AWS == "true"

- name: Cluster API - Provider AWS | Apply Cluster API Provider AWS
  kube:
    kubectl: "{{ bin_dir }}/kubectl"
    filename: "{{ kube_config_dir }}/addons/cluster_api/{{ item }}"
    state: "latest"
    wait: true
  with_items:
    - "infrastructure-components-aws.yaml"
  when:
    - inventory_hostname == groups['kube_control_plane'][0]
    - CAPI_PROVIDER_AWS == "true"

- name: Cluster API - Provider VSPHERE | Generate Manifests CAPI Provider VSPHERE
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ kube_config_dir }}/addons/cluster_api/{{ item.file }}"
  with_items:
    - { name: "infrastructure-components-vsphere", file: "infrastructure-components-vsphere.yaml"}
  when: 
    - inventory_hostname == groups['kube_control_plane'][0]
    - CAPI_PROVIDER_VSPHERE == "true"

- name: Cluster API - Provider VSPHERE | Apply Cluster API Provider VSPHERE
  kube:
    kubectl: "{{ bin_dir }}/kubectl"
    filename: "{{ kube_config_dir }}/addons/cluster_api/{{ item }}"
    state: "latest"
    wait: true
  with_items:
    - "infrastructure-components-vsphere.yaml"
  when:
    - inventory_hostname == groups['kube_control_plane'][0]
    - CAPI_PROVIDER_VSPHERE == "true"